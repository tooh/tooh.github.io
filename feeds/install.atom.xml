<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Daily Scrum - install</title><link href="https://blog.florijnconsultancy.nl/" rel="alternate"></link><link href="https://blog.florijnconsultancy.nl/feeds/install.atom.xml" rel="self"></link><id>https://blog.florijnconsultancy.nl/</id><updated>2015-01-31T10:26:00+01:00</updated><subtitle>A personal blog</subtitle><entry><title>upgrade to Bugzilla 5.0</title><link href="https://blog.florijnconsultancy.nl/articles/upgrade-to-bugzilla-50.html" rel="alternate"></link><published>2015-01-31T10:26:00+01:00</published><updated>2015-01-31T10:26:00+01:00</updated><author><name>Peter Florijn</name></author><id>tag:blog.florijnconsultancy.nl,2015-01-31:/articles/upgrade-to-bugzilla-50.html</id><summary type="html"></summary><content type="html">&lt;div class="toc"&gt;&lt;span class="toctitle"&gt;Table of contents&lt;/span&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#updating-to-a-newer-release"&gt;Updating to a Newer Release&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="#no-local-changes"&gt;No local&amp;nbsp;changes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#upgrade-to-release-50"&gt;Upgrade to release&amp;nbsp;5.0&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#local-uncommitted-changes"&gt;Local, uncommitted&amp;nbsp;changes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;I upgraded to Bugzilla&amp;nbsp;5.0.&lt;/p&gt;
&lt;p&gt;Since the Bugzilla project now supports git, upgrading is now a simple&amp;nbsp;process.&lt;/p&gt;
&lt;p&gt;These are my installation&amp;nbsp;notes.&lt;/p&gt;
&lt;h2 id="updating-to-a-newer-release"&gt;Updating to a Newer&amp;nbsp;Release&lt;/h2&gt;
&lt;h3 id="no-local-changes"&gt;No local&amp;nbsp;changes&lt;/h3&gt;
&lt;p&gt;If you have no local changes to any tracked files, upgrading to both minor and major releases is&amp;nbsp;simple:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git fetch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git checkout bugzilla-(version)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;where (version) is the version number that you want to update to, like&amp;nbsp;5.0rc3&lt;/p&gt;
&lt;h3 id="upgrade-to-release-50"&gt;Upgrade to release&amp;nbsp;5.0&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git fetch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git checkout release-5.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&amp;lt;!— more&amp;nbsp;—&amp;gt;&lt;/p&gt;
&lt;h3 id="local-uncommitted-changes"&gt;Local, uncommitted&amp;nbsp;changes&lt;/h3&gt;
&lt;p&gt;The above checkout command will fail if you’ve made any modifications to files you checked out from git with a warning about overwriting local changes. In this case, the simple solution is to stash and then reapply your changes (assuming you’ve done the “git fetch”&amp;nbsp;already):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git stash save
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git checkout bugzilla-(version)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git stash apply
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;However, it is better to create a local branch, which is one of git’s strengths. You can track your customizations and merge in changes from&amp;nbsp;upstream. &lt;/p&gt;</content><category term="install"></category><category term="bugzilla"></category></entry></feed>